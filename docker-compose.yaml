## Container based media tools configuration
##
## Configuration items for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: "3.3"

######################
# SERVICES TO LAUNCH #
######################

services:
  # ----------------------------------------
  # TRAEFIK
  # Reverse Proxy + SSL Support
  # ----------------------------------------
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    restart: unless-stopped
    networks:
      - web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - CF_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "providers.docker.network=web"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"

  # ----------------------------------------
  # WHOAMI
  # Simple Service for Testing
  # ----------------------------------------
  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    restart: unless-stopped
    networks:
      - web
    labels:
      - "traefik.enable=true"
      - "providers.docker.network=web"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"

  # ----------------------------------------
  # PLEX
  # Robust Media Server
  # ----------------------------------------
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    networks:
      - web
    ports:
      - "32400:32400/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "5354:5353/udp"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - PLEX_CLAIM=${PMSTOKEN}
    volumes:
      - "./plex:/config"
      - "./plex/transcode:/transcode"
      - "${MEDIA_PATH}/media/movies:/movies"
      - "${MEDIA_PATH}/media/series:/tv"
    labels:
      - "traefik.enable=true"
      - "providers.docker.network=web"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"

  # ----------------------------------------
  # QBITTORRENT + PIA VPN
  # Torrent Client with VPN
  # ----------------------------------------
  pia-qbittorrent:
    image: j4ym0/pia-qbittorrent
    container_name: pia-qbittorrent
    restart: unless-stopped
    networks:
      - web
    ports:
      - "8888:8888"
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=${TZ}
      - UID=${PUID}
      - GID=${PGID}
      - USER=${PIA_UNAME}
      - PASSWORD=${PIA_PASS}
      - REGION=${PIA_REGION}
      - DNS_SERVERS=${DNS_SERVERS}
      - PORT_FORWARDING=${PIA_PORT_FORWARDING}
    volumes:
      - ./qbittorrent:/config
      - "${ROOT}/torrents/Completed:/downloads"
    labels:
      - "traefik.enable=true"
      - "providers.docker.network=web"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.${DOMAIN}`)"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.tls=true"
      - "traefik.http.routers.qbittorrent.tls.certresolver=myresolver"

  # ----------------------------------------
  # SONARR
  # TV Series Management
  # ----------------------------------------
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - web
    ports:
      - 8989:8989
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - "./sonarr:/config"
      - "${MEDIA_PATH}/media/series:/tv"
      - "${ROOT}/torrents/Completed:/downloads"
    labels:
      - "traefik.enable=true"
      - "providers.docker.network=web"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)"
      - "traefik.http.services.sonarr.loadbalancer.server.port=32400"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"

# ----------------------------------------
# General Purpose Container
# ----------------------------------------
networks:
  web:
    external: true
